\RequirePackage{expl3}
\ProvidesExplPackage
  {beamerext}
  {2014/04/18}
  {1.0}
  {Custom Beamer extensions}

% @@ = beamerext

\msg_new:nnn { beamerext } { beamer_not_loaded }
  { Beamer~class~is~not~loaded. }

\@ifclassloaded { beamer }
  { }
  { \msg_fatal:nn { beamerext } { beamer_not_loaded } }



%
\newcommand<>{\mycover}[1]{\alt#2{\color{yellow}#1\color{black}}{#1}}




\tl_new:N \l_@@_align_tl

\keys_define:nn { beamerext } {
  align .choices:nn = { left , center , right } {
    \tl_set_eq:NN \l_@@_align_tl \l_keys_choice_tl
  },
  align .value_required:,
  %
  l .meta:n = { align = left }, 
  l .value_forbidden:,
  c .meta:n = { align = center }, 
  c .value_forbidden:,
  r .meta:n = { align = right },
  r .value_forbidden:,
  %
  __default .meta:n = { align = left }, 
  __default .value_forbidden:, 
}


\box_new:N \l_@@_phantom_box
\box_new:N \l_@@_default_box
\box_new:N \l_@@_alt_i_box
\box_new:N \l_@@_alt_ii_box


% \Alt is to \alt as \visible is to \only.

\newcommand<> \Alt [3] [] {
  \@@_Alt:nnnn {#1} {#2} {#3} {#4}
}

\cs_new_protected:Npn \@@_Alt:nnnn #1#2#3#4 {
  \group_begin:
    \keys_set:nn { beamerext } { __default , #1 }

    \alt #4
      { \cs_set_eq:NN \@@_current_box:NN \use_i:nn }
      { \cs_set_eq:NN \@@_current_box:NN \use_ii:nn }

    \mode_if_math:TF
      { \mathpalette \@@_Alt_math:Nn { {#2} {#3} } }
      { \@@_Alt_text:nn {#2} {#3} }
  \group_end:
}

\cs_new_protected:Npn \@@_Alt_math:Nn #1#2
  { \@@_Alt_math:Nnn #1 #2 }

\cs_new_protected:Npn \@@_Alt_math:Nnn #1#2#3
  { \@@_Alt_text:nn { $\m@th #1 #2$ } { $\m@th #1 #3$ } }

\cs_new_protected:Npn \@@_Alt_text:nn #1#2 {
  \hbox_set:Nn \l_@@_default_box {#1}
  \hbox_set:Nn \l_@@_alt_i_box {#2}

  \@@_overlay_set_phantom:NNN
    \l_@@_phantom_box \l_@@_default_box \l_@@_alt_i_box

  \use:c { @@_overlay_use_ \tl_use:N \l_@@_align_tl :No }
    \l_@@_phantom_box
    { \@@_current_box:NN \l_@@_default_box \l_@@_alt_i_box }
}

\cs_new_protected:Npn \@@_overlay_set_phantom:NNN #1#2#3 {
  \hbox_set:Nn #1 {}
  \@@_overlay_set_bounding:NNN #1 #2 #3
}

\cs_new_protected:Npn \@@_overlay_set_bounding:NNN #1#2#3 {
  \box_set_wd:Nn #1
    { \dim_max:nn { \box_wd:N #2 } { \box_wd:N #3 } }

  \box_set_ht:Nn #1
    { \dim_max:nn { \box_ht:N #2 } { \box_ht:N #3 } }

  \box_set_dp:Nn #1
    { \dim_max:nn { \box_dp:N #2 } { \box_dp:N #3 } }
}

\cs_new_protected:Npn \@@_overlay_use_left:NN #1#2 {
  \hbox_overlap_right:n { \box_use_clear:N #2 }
  \box_use_clear:N #1
}
\cs_generate_variant:Nn \@@_overlay_use_left:NN { No }

\cs_new_protected:Npn \@@_overlay_use_center:NN #1#2 {
  \box_set_wd:Nn #1 { \box_wd:N #1 / 2 }

  \box_use:N #1
  \hbox_overlap_left:n { \box_use_clear:N #2 \tex_hss:D }
  \box_use_clear:N #1
}
\cs_generate_variant:Nn \@@_overlay_use_center:NN { No }

\cs_new_protected:Npn \@@_overlay_use_right:NN #1#2 {
  \box_use_clear:N #1
  \hbox_overlap_left:n { \box_use_clear:N #2 }
}
\cs_generate_variant:Nn \@@_overlay_use_right:NN { No }



% \Temporal is to \temporal as \visible is to \only.

\newcommand<> \Temporal [4] [] {
  \@@_Temporal:nnnnn {#1} {#2} {#3} {#4} {#5}
}

\cs_new_protected:Npn \@@_Temporal:nnnnn #1#2#3#4#5 {
  \group_begin:
    \keys_set:nn { beamerext } { __default , #1 }

    \temporal #5
      { \cs_set_eq:NN \@@_current_box:NNN \use_i:nnn }
      { \cs_set_eq:NN \@@_current_box:NNN \use_ii:nnn }
      { \cs_set_eq:NN \@@_current_box:NNN \use_iii:nnn }

    \mode_if_math:TF
      { \mathpalette \@@_Temporal_math:Nn { {#2} {#3} {#4} } }
      { \@@_Temporal_text:nn {#2} {#3} {#4} }
  \group_end:
}

\cs_new_protected:Npn \@@_Temporal_math:Nn #1#2
  { \@@_Temporal_math:Nnnn #1 #2 }

\cs_new_protected:Npn \@@_Temporal_math:Nnnn #1#2#3#4 {
  \@@_Temporal_text:nnn
    { $\m@th #1 #2$ } { $\m@th #1 #3$ } { $\m@th #1 #4$ }
}

\cs_new_protected:Npn \@@_Temporal_text:nnn #1#2#3 {
  \hbox_set:Nn \l_@@_alt_i_box {#1}
  \hbox_set:Nn \l_@@_default_box {#2}
  \hbox_set:Nn \l_@@_alt_ii_box {#3}

  \@@_overlay_set_phantom:NNNN
    \l_@@_phantom_box
    \l_@@_alt_i_box \l_@@_default_box \l_@@_alt_ii_box

  \use:c { @@_overlay_use_ \tl_use:N \l_@@_align_tl :No }
    \l_@@_phantom_box
    {
      \@@_current_box:NNN
        \l_@@_alt_i_box \l_@@_default_box \l_@@_alt_ii_box
    }
}

\cs_new_protected:Npn \@@_overlay_set_phantom:NNNN #1#2#3#4 {
  \@@_overlay_set_phantom:NNN #1 #2 #3
  \@@_overlay_set_bounding:NNN #1 #1 #4
}



% Overlay commands lifted to TikZ styles

\RequirePackage { scrlfile }

\AfterPackage { tikz } {
  \tikzset {
    temporal / .code~args = { <#1>#2#3#4 } {
      \temporal <#1>
        { \pgfkeysalso {#2} }
        { \pgfkeysalso {#3} }
        { \pgfkeysalso {#4} }
    },
    %
    alt / .code~args = { <#1>#2#3 } {
      \alt <#1>
        { \pgfkeysalso {#2} }
        { \pgfkeysalso {#3} }
    },
    %
    only / .style~args = { <#1>#2 } { alt = <#1> {#2} {} },
    %
    % only /.code~args = { <#1>#2 } {
    %   \only <#1> { \pgfkeysalso {#2} }
    % },
    %
    /handlers /.apply~style /.code = { \pgfkeysalso {#1} },
    %
    /handlers /.temporal /.code~args = { <#1>#2#3#4 } {
      \temporal <#1>
        { \pgfkeysalso { \pgfkeyscurrentpath = {#2} } }
        { \pgfkeysalso { \pgfkeyscurrentpath = {#3} } }
        { \pgfkeysalso { \pgfkeyscurrentpath = {#4} } }
    },
    %
    /handlers /.alt /.code~args = { <#1>#2#3 } {
      \alt <#1>
        { \pgfkeysalso { \pgfkeyscurrentpath = {#2} } }
        { \pgfkeysalso { \pgfkeyscurrentpath = {#3} } }
    },
    % 
    /handlers /.value~forbidden /.prefix~code = {
      \pgfkeyssetvalue { \pgfkeyscurrentpath /.@forbidden } {}
    },
    %
    /handlers /.only /.code~args = { <#1>#2 } {
      \only <#1>
        {
          \pgfkeysifdefined { \pgfkeyscurrentpath /.@forbidden }
            {
              \tl_if_empty:nTF {#2}
                { \pgfkeysalso { \pgfkeyscurrentpath = { \pgfkeysnovalue } } }
                { \pgfkeysalso { \pgfkeyscurrentpath = {#2} } }
            }
            { \pgfkeysalso { \pgfkeyscurrentpath = {#2} } }
        }
    }, 
    %
    /handlers /.onlyrev /.code~args = { <#1>#2 } {
      \alt <#1>
        { }
        {
          \pgfkeysifdefined { \pgfkeyscurrentpath /.@forbidden }
            {
              \tl_if_empty:nTF {#2}
                { \pgfkeysalso { \pgfkeyscurrentpath = { \pgfkeysnovalue } } }
                { \pgfkeysalso { \pgfkeyscurrentpath = {#2} } }
            }
            { \pgfkeysalso { \pgfkeyscurrentpath = {#2} } }
        }
    }, 
  }
}